// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    DMux8Way(in=load , sel=address[3..5], a=r1 , b=r2 , c=r3 , d=r4 , e=r5 , f=r6 , g=r7 , h=r8 );
    RAM8(in=in , load= r1, address=address[0..2] , out=outRAM1 );
    RAM8(in=in , load= r2, address=address[0..2] , out=outRAM2 );
    RAM8(in=in , load= r3, address=address[0..2] , out=outRAM3 );
    RAM8(in=in , load= r4, address=address[0..2] , out=outRAM4 );
    RAM8(in=in , load= r5, address=address[0..2] , out=outRAM5 );
    RAM8(in=in , load= r6, address=address[0..2] , out=outRAM6 );
    RAM8(in=in , load= r7, address=address[0..2] , out=outRAM7 );
    RAM8(in=in , load= r8, address=address[0..2] , out=outRAM8 );
    Mux8Way16(a=outRAM1 , b=outRAM2 , c=outRAM3 , d=outRAM4 , e=outRAM5 , f=outRAM6 , g=outRAM7 , h=outRAM8 , sel=address[3..5] , out= out);
    
}